// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Quiz {
  id          String   @id @default(cuid())
  name        String
  description String?
  authorId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  questions   Question[]
  author      User     @relation(fields: [authorId], references: [id])
}

model QuestionType {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  questions   Question[]
}

model Question {
  id          String       @id @default(cuid())
  quizId      String
  typeId      String
  content     String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  quiz        Quiz         @relation(fields: [quizId], references: [id])
  type        QuestionType @relation(fields: [typeId], references: [id])
  options     Option[]
}

model Option {
  id          String   @id @default(cuid())
  questionId  String
  content     String
  isCorrect   Boolean
  order       Int?     // Pour les questions de type Puzzle - ordre correct
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  question    Question @relation(fields: [questionId], references: [id])
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  quizzes     Quiz[]
}